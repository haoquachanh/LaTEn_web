name: GitHub to Vercel CI/CD

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

env:
  NODE_VERSION: '18'
  NEXT_TELEMETRY_DISABLED: 1

jobs:
  # Job 1: Code Quality Check
  quality-check:
    name: Code Quality Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: './frontend/package-lock.json'
          
      - name: Install dependencies
        run: npm ci
        working-directory: ./frontend
        
      - name: Type Check
        run: npm run type-check
        working-directory: ./frontend
        
      - name: Lint Check  
        run: npm run lint
        working-directory: ./frontend
        
      - name: Build Check
        run: npm run build
        working-directory: ./frontend

  # Job 2: Deploy to Vercel
  deploy:
    name: Deploy to Vercel
    runs-on: ubuntu-latest
    needs: quality-check
    if: github.event_name == 'push'
    environment: Production
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: './frontend/package-lock.json'
          
      - name: Install dependencies
        run: npm ci
        working-directory: ./frontend
        
      - name: Build application
        run: npm run build
        working-directory: ./frontend
        
      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./frontend
          vercel-args: '--prod'

  # Job 3: Health Check
  health-check:
    name: Health Check
    runs-on: ubuntu-latest
    needs: deploy
    if: github.event_name == 'push'
    
    steps:
      - name: Wait for deployment
        run: sleep 30
        
      - name: Health check
        run: |
          echo "âœ… Health check completed - placeholder for actual endpoint test"
